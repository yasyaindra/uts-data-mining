Developing Mobile Applications Via Model Driven Development:A Systematic Literature Review Context:Mobile applications (known as ‘‘apps’’) usage continues to rapidly increase, with many new appsbeing developed and deployed. However, developing a mobile app is challenging due to its dependencies ondevices, technologies, platforms, and deadlines to reach the market. One potential approach is to useModelDrivenDevelopment (MDD) techniques that simplify the app development process, reduce complexity, increaseabstraction level, help achieve scalable solutions and maximize cost-effectiveness and productivity.Objective:This paper systematically investigates what MDD techniques and methodologies have been usedto date to support mobile app development and how these techniques have been employed, to identify keybenefits, limitations, gaps and future research potential.Method:A Systematic Literature Review approach was used for this study based on a formal protocol. Therigorous search protocol identified a total of 1,042 peer-reviewed academic research papers from four majorsoftware engineering databases. These papers were subsequently filtered, and 55 high quality relevant studieswere selected for analysis, synthesis, and reporting.Results:We identified the popularity of different applied MDD approaches, supporting tools, artifacts, andevaluation techniques. Our analysis found that architecture, domain model, and code generation are the mostcrucial purposes in MDD-based app development. Three qualities – productivity, scalability and reliability –can benefit from these modeling strategies. We then summarize the key collective strengths, limitations, gapsfrom the studies and made several future recommendations.Conclusion:There has been a steady interest in MDD approaches applied to mobile app developmentover the years. This paper guides future researchers, developers, and stakeholders to improve app develop-ment techniques, ultimately that will help end-users in having more effective apps, especially when somerecommendations are addressed, e.g., taking into account more human-centric aspects in app development In 2021, the number of smartphone users exceeded 3.8 billion, andapproximately 66% of the world population had a mobile device suchas cell phone, tablet, or a cellular-enabled IoT device [1,2]. In addition,mobile phone usage for different purposes had an average increase of7.71% per year over the last three years [3]. In 2018, more than 205billion mobile apps were downloaded from the app repositories [4]. Therevenue earned by the mobile apps is expected to reach $935 billionin 2023, compared to $365 billion earned in 2018 [5]. Developinga modern mobile app is not a trivial exercise [6]. Key steps in appdevelopment include requirements gathering, platform selection, targetusers identification, constraint mapping, and problem modeling. Duringdesign, app developers draw approximateUserInterface (UI) sketches and may use a prototyping tool to create the model aspects of the visualdesign and the navigation flow. The architecture of the app is designedbased on needed functionality and user interface mockups. Finally,the app is coded and the clients download, use and provide feedbackon it. This is a highly iterative process and continues throughout thedevelopment lifecycle.ModelDrivenDevelopment (MDD) techniques can help developersbuild an app more efficiently, as they enable code synthesis through amodel transformation process. MDD has shown to be successful in manySoftwareEngineering (SE) domains to improve productivity, increasethe quality of the outcome, provide tools for formal analysis, minimizemanual implementation effort, provide more reliability, flexibility, and easy maintenance [7,8]. However, some researchers have shown thatwhile many MDD-based mobile app development approaches offeruseful domain patterns and tools, many of the models they use arerelatively low-level. This can be a problem because they can thenbecome very large and cumbersome to work with, require a lot ofmodeling effort, and do not abstract away from code-level details.Additionally, while many are sufficient to describe information forbasic app generation, often only user interface or basic data aspectscan be modeled and generated, and they do not contain adequateinformation to realize the full implementation while still require verydetailed modeling [9,10]. Thus, these approaches are often hard toreuse, need expert app developer input, do not leverage similaritiesacross platforms, and require extensive post-generation app testing andtuning.We conducted a detailed investigation into existing research ap-proaches used for mobile app development based on model-drivendevelopment, to identify strengths, limitations, and key directions forfuture work in the area. To do this, we chose to use aSystematicLiteratureReview (SLR), locating and synthesizing relevant academicliterature. This SLR will benefit the readers interested in app develop-ment in three key ways: (i) to understand existing MDD methodologies,techniques, and tools for app development; (ii) to compare differentways of app modeling and generation; and (iii) to identify key researchgaps, potential future work, and enhancement possibilities for existingMDD based mobile app development approaches.Based on our findings, 20 out of 55 selected studies aimed tomake the app development process more flexible and faster, primar-ily to manage models, data, and services. We also found that thereusable code generation components in 8 of the selected studies wasshown to reduce product development time and consequently costsfor cross-platform, multi-platform or multi-version app development.Additionally, 18 studies proposed a new method, framework, tool, orlanguages to increase development efficiency. Our analysis also foundthat architecture, domain model and code generation are the mostcrucial purposes in MDD based app development, and three qualities,productivity, scalability and reliability can benefit from these modelingstrategies. We found that a substantial proportion of the selected studies(25.45%) focus mainly on interface development instead of full mobileapp features. Most approaches have been applied to examples and use-cases from academia (80%) and only a few from industry. One potentialreason is that MDD approaches are not sufficiently mature and flexiblefor industrial app development. Another is that many industry apps canbe built sufficiently well without using MDD approaches, or by onlyusing basic MDD approaches e.g. generate skeleton code only